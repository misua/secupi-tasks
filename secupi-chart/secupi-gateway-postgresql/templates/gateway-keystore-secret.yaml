{{- /*
Business logic
==============
for each file in (keystore)
  current_data = get data from exiting secret OR use default
  if there is external override for file, for example, determined by
  helm install RELEASE_NAME <this-chart> --set-file gateway.keystore=/foo/bar/keystore
    current_data = data from external file
  use current_data as data for file
apply files with their data as a Kubernetes secret

This allows deploying defaults for initial installation / missing entries on version upgrades
while maintaining manual modifications not done via helm.
*/ -}}

{{- $existing_secret_b64 := lookup "v1" "Secret" .Release.Namespace (include "secupi_gateway_keystore.secret.name" .) }}
{{- $new_secret := dict "data" (dict "keystore" (.Files.Get "files/gateway-keystore")) }}

{{- if (hasKey $existing_secret_b64 "data") }}
  {{- if (hasKey $existing_secret_b64.data "keystore") }}
  {{- $_ := set $new_secret.data "keystore" (get $existing_secret_b64.data "keystore" | b64dec) }}
  {{- end }}
{{- end }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ include "secupi_gateway_keystore.secret.name" . }}
  labels:
    app: {{ include "secupi_gateway.label" . }}
    {{- include "secupi_common.labels" . | nindent 4 }}
data:
  keystore.jks: |-
    {{ .Values.gateway.keystore | default (get $new_secret.data "keystore") | b64enc }}
